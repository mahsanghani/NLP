# -*- coding: utf-8 -*-
"""augmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IiAhPYCwNX89_P-UZaPbRIxY2OZ5gaES
"""

#important import libraries
import matplotlib.pyplot as plt
import tensorflow as tf
import numpy as np
import os
import cv2 as cv
from google.colab.patches import cv2_imshow
from IPython.display import clear_output
from google.colab import files

#unzip the folder containing your images
!unzip "/content/Total Images.zip" -d "/content/"
!unzip "/content/Total GT.zip" -d "/content/"
clear_output()

filenames_img=os.listdir('/content/Total Images')
filenames_GT=os.listdir('/content/Total GT')
filenames_imgsplit=[filename.replace('.tif', '') for filename in filenames_img]
filenames_GTsplit=[filename.replace('.txt', '') for filename in filenames_GT]

def rotate_bound(image, angle):
    # grab the dimensions of the image and then determine the
    # center
    (h, w) = image.shape[:2]
    (cX, cY) = (w // 2, h // 2)
    # grab the rotation matrix (applying the negative of the
    # angle to rotate clockwise), then grab the sine and cosine
    # (i.e., the rotation components of the matrix)
    M = cv.getRotationMatrix2D((cX, cY), -angle, 1.0)
    cos = np.abs(M[0, 0])
    sin = np.abs(M[0, 1])
    # compute the new bounding dimensions of the image
    nW = int((h * sin) + (w * cos))
    nH = int((h * cos) + (w * sin))
    # adjust the rotation matrix to take into account translation
    M[0, 2] += (nW / 2) - cX
    M[1, 2] += (nH / 2) - cY
    # perform the actual rotation and return the image
    return cv.warpAffine(image, M, (nW, nH))

!mkdir labels_aug
!mkdir img_aug
for m in range(len(filenames_img)-1):
  img=cv.imread('/content/Total Images/'+filenames_img[m],0)
  label_file = open('/content/Total GT/'+filenames_GT[m], "r") 
  label=label_file.read()
  with open("/content/labels_aug/"+filenames_GTsplit[m]+'_rot.txt', 'w') as fid: # 'w' creates a new file
          fid.write(label)
  print(img)
  img=rotate_bound(img,3)
  cv.imwrite("/content/img_aug/"+filenames_imgsplit[m]+"_rot.tif", img)

!zip -r /content/img_aug.zip  /content/img_aug
files.download("/content/img_aug.zip") 
!zip -r /content/labels_aug.zip /content/labels_aug
files.download("/content/labels_aug.zip")





